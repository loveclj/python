#!/usr/bin/env python
# encoding: utf-8

"""
@author: lizhifeng
@contact: lizhifeng2009@126.com
@site: 
@file: similarity.py
@time: 7/7/16 4:08 PM
"""

def jeccard_distance(s1, s2, demenssion=881):
    n1 = 0
    n2 = 0
    union = 0
    for i in range(demenssion):
        if s1[i] == '1':
            n1 += 1

        if s2[i] == '1':
            n2 += 1

        if s1[i] == '1' or s2[i] == '1':
            union += 1

    return float(n1 + n2 - union)/union


def find_min_distance(s, distance_fun):
    fp = open('chemical_data.text', 'r')
    max_similarity = 0
    k = 0
    while True:
        line = fp.readline()
        if not line:
            break

        cid, fingerprint = line.strip('\n').split(',')
        similarity = distance_fun(s, fingerprint)
        print similarity
        # if similarity - 1 > -0.00001:
        #     print "same chemical", cid
        # elif similarity > 0.8:
        #     k += 1
        # elif similarity > max_similarity:
        #     max_similarity = similarity
        #     print "change: cid:", cid, "similarity:", max_similarity
    print k


if __name__ == '__main__':
    s
    s

    find_min_distance(s1, jeccard_distance)